Table users {
  id int [pk, increment]
  display_name varchar(20) [note: "マイページで表示されるだけの名前"]
  email varchar(255) [unique, not null, note: "ログイン用アドレス"]
  encrypted_password varchar(255) [not null, note: "暗号化済みのパスワード"]
  reset_password_token varchar(255) [note: "パスワードリセット時のトークン"]
  reset_password_sent_at timestamp [note: "リセットメール送信日時"]
  remember_created_at timestamp [note: "ログインを保持する期限"]
  provider varchar(64) [note: "外部認証サービスの識別"]
  uid varchar(255) [note: "外部サービスのユーザー固有ID"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    email [unique, name: "index_users_on_email"]
    reset_password_token [unique, name: "index_users_on_reset_password_token"]
    (provider, uid) [unique, name: "index_users_on_provider_and_uid"]
  }

  Note: '''
  Deviseで管理される登録ユーザーのみ。
  ゲストはgroup_membershipsで管理。
  '''
}

Table groups {
  id int [pk, increment]
  created_by_user_id int [not null, ref: > users.id, note: "グループ作成者"]
  name varchar(30) [not null]
  invite_token varchar(64) [not null, unique, note: "招待リンク用トークン"]
  trip_name varchar(50) [note: "しおり名"]
  start_date date [note: "旅行開始日"]
  end_date date [note: "旅行終了日"]
  trip_memo text [note: "しおり全体のメモ"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    invite_token [unique, name: "index_groups_on_invite_token"]
    created_by_user_id [name: "index_groups_on_created_by_id"]
    start_date [name: "index_groups_on_start_date"]
  }

  Note: '''
  招待URLで共有するためのグループ。
  作成にはユーザー登録が必須。
  1グループに1つのしおりをつくるので日程の情報も持たせる
  '''

}

Table group_memberships {
  id int [pk, increment]
  user_id int [null, ref: > users.id, note: "登録ユーザーのみ値あり"]
  group_id int [not null, ref: > groups.id, note: "所属グループ"]
  group_nickname varchar(20) [not null, note: "グループ内での表示名"]
  role int [not null, default: 0, note: "0: member, 1: owner"]
  guest_token varchar(64) [note: "ゲスト認証用トークン（user_id=nullの場合のみ）"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (group_id, user_id) [unique, name: "index_gm_on_group_and_user"]
    (group_id, group_nickname) [name: "index_gm_on_group_and_nickname"]
    guest_token [name: "index_gm_on_guest_token"]
  }

  Note: '''
  CHECK制約:
  (user_id IS NOT NULL AND is_guest = false AND guest_token IS NULL)
  OR
  (user_id IS NULL AND is_guest = true AND guest_token IS NOT NULL)
  登録ユーザーとゲストの整合性を保証。
  '''

}

Table cards {
  id int [pk, increment]
  user_id int [null, ref: > users.id, note: "個人用カードの場合のユーザーID"]
  group_id int [null, ref: > groups.id, note: "グループ用カードの場合のグループID"]
  name varchar(50) [not null]
  memo text
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    user_id [name: "index_cards_on_user_id"]
    group_id [name: "index_cards_on_group_id"]
  }

  Note: '''
  CHECK制約:
  (user_id IS NOT NULL AND group_id IS NULL AND created_by_membership_id IS NULL)
  OR
  (user_id IS NULL AND group_id IS NOT NULL AND created_by_membership_id IS NOT NULL)

  データ例:
  # 個人用カード
  id=1, user_id=10, group_id=NULL
  # グループ用カード
  id=2, user_id=NULL, group_id=5
  '''

}

Table spots {
  id int [pk, increment]
  card_id int [not null, ref: > cards.id, note: "所属カード"]
  category_id int [not null, ref: > categories.id]
  google_place_id varchar(255) [note: "Google側のID"]
  name varchar(50) [not null, note: "スポット名"]
  address varchar(255) [note: "住所"]
  phone_number varchar(20) [note: "電話番号"]
  website_url varchar(500) [note: "公式サイトURL"]
  area_id int [null, ref: > areas.id, note: "エリア（本リリースで使用）"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    card_id [name: "index_spots_on_card_id"]
    category_id [name: "index_spots_on_category_id"]
    google_place_id [name: "index_spots_on_google_place_id"]
  }

  Note: '''
  個人用カードのスポット: created_by_membership_id = NULL
  グループ用カードのスポット: created_by_membership_id = メンバーID
  画像はActiveStorage
  '''

}

Table categories {
  id int [pk, increment]
  name varchar(20) [not null, unique, note: "カテゴリ名"]
  icon varchar(50) [note: "アイコン名（Font Awesome等）"]
  display_order int [not null, default: 0, note: "表示順"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    display_order [name: "index_categories_on_display_order"]
  }

  Note: '''
  全体共通の固定カテゴリ（シードデータで作成）:
  1. 観光スポット (display_order: 1)
  2. グルメ (display_order: 2)
  3. 体験 (display_order: 3)
  4. 買い物 (display_order: 4)
  '''

}

Table group_schedule_spots {
  id int [pk, increment]
  group_id int [not null, ref: > groups.id, note: "グループID"]
  spot_id int [not null, ref: > spots.id, note: "スポットID"]
  global_position int [not null, note: "全体での順番（1,2,3...全スポット通しの番号）"]
  day_number int [not null, note: "何日目（1日目,2日目...区切り線表示用）"]
  start_time timestamp [note: "開始時刻（到着時刻）"]
  end_time timestamp [note: "終了時刻（出発時刻）"]
  memo text [note: "メモ"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
  (group_id, global_position) [unique, name: "index_gss_on_group_and_position"]
  (group_id, day_number) [name: "index_gss_on_group_and_day"]
  spot_id [name: "index_tss_on_spot_id"]
  }

  Note: '''
  グループのしおりに追加されたスポット。
  '''

}

Table comments {
  id int [pk, increment]
  card_id int [not null, ref: > cards.id, note: "カード詳細ページのコメント"]
  group_membership_id int [not null, ref: > group_memberships.id, note: "グループ用カードの場合"]
  content text [not null, note: "コメント内容"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    card_id [name: "index_comments_on_card_id"]
    group_membership_id [name: "index_comments_on_group_membership_id"]
    (card_id, created_at) [name: "index_comments_on_card_and_created_at"]
  }

  Note: '''

  '''

}

Table personal_packing_items {
  id int [pk, increment]
  user_id int [not null, ref: > users.id, note: "ユーザーID"]
  name varchar(50) [not null, note: "持ち物名"]
  is_checked boolean [not null, default: false, note: "チェック済みか"]
  category varchar(20) [note: "カテゴリ（自由入力）"]
  display_order int [not null, default: 0]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (user_id, display_order) [name: "index_personal_packing_on_user_and_order"]
  }

  Note: '''
  個人用の持ち物チェックリスト。
  '''

}

Table group_packing_items {
  id int [pk, increment]
  group_id int [not null, ref: > groups.id, note: "所属グループ"]
  name varchar(50) [not null, note: "持ち物名"]
  is_checked boolean [not null, default: false, note: "チェック済みか"]
  category varchar(20) [note: "カテゴリ"]
  display_order int [not null, default: 0]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (group_id, display_order) [name: "index_group_packing_on_group_and_order"]
  }

  Note: '''
  グループ共有の持ち物リスト。
  グループに紐づく。
  '''
}

Table card_likes {
  id int [pk, increment]
  card_id int [not null, ref: > cards.id, note: "いいねされたカード"]
  group_membership_id int [not null, ref: > group_memberships.id, note: "いいねした人"]

  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (card_id, group_membership_id) [unique, name: "index_card_likes_on_card_and_membership"]
    card_id [name: "index_card_likes_on_card_id"]
    group_membership_id [name: "index_card_likes_on_membership_id"]
  }

  Note: '''
  1人は同じ目的地に1回のみいいね可能（unique制約）。
  グッド数は card_likes.count で取得。
  '''
}

Table areas {
  id int [pk, increment]
  card_id int [not null, ref: > cards.id, note: "所属カード"]
  name varchar(30) [not null, note: "エリア名（札幌、函館、小樽など）"]
  display_order int [not null, default: 0, note: "表示順"]
  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (card_id, display_order) [name: "index_areas_on_card_and_order"]
  }

  Note: '''
  カード内でスポットをエリアごとに分類。
  例: 北海道カード → 札幌 / 函館 / 小樽
  spots.area_idで紐づける。
  '''

}

Table expenses {
  id int [pk, increment]
  group_id int [not null, ref: > groups.id]
  paid_by_membership_id int [not null, ref: > group_memberships.id, note: "立て替えた人"]

  name varchar(100) [not null, note: "項目名（ホテル代、交通費等）"]
  amount decimal(10, 2) [not null, note: "支払額"]
  paid_at date

  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    group_id [name: "index_expenses_on_group_id"]
  }
}

Table expense_participants {
  id int [pk, increment]
  expense_id int [not null, ref: > expenses.id]
  group_membership_id int [not null, ref: > group_memberships.id, note: "割り勘対象者"]
  amount decimal(10, 2) [not null, note: "この人の負担額"]

  created_at timestamp [not null]
  updated_at timestamp [not null]
}

Table settlements {
  id int [pk, increment]
  group_id int [not null, ref: > groups.id]

  from_membership_id int [not null, ref: > group_memberships.id, note: "支払う人"]
  to_membership_id int [not null, ref: > group_memberships.id, note: "受け取る人"]
  amount decimal(10, 2) [not null, note: "精算額"]

  is_settled boolean [default: false, note: "精算完了か"]
  settled_at timestamp [note: "精算完了日時"]

  created_at timestamp [not null]
  updated_at timestamp [not null]

  Indexes {
    (group_id, from_membership_id, to_membership_id) [unique, name: "index_settlements_unique"]
  }

}
